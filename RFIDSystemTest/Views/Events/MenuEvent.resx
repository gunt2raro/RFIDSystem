<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bList.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAByUAAAclAZUfes0AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAABmklEQVR4Xu3bIU4DQRjF8a+IpqrpFRpMHbhaXE/AFXoF8GDB9QDcgBsgcDgMBk2oxKFgeS+Z3cxu
        vhPMn0l+TfdlEG+SttsyE13XoaUhSRqSjC8itnIvz/Ipx0a4izu523bUuRRfyJ38iIOWuaO7LuoFOEg9
        ieBQuseF/Mp0Quvc2d3joQRE7h5vVUDj7vFVBTTuHk9VQOPucVsFNO4eK/koAYk7r/r7gJ18y3RSq9x1
        N9wIlUXYyIvUE1vkjpuhd/+kLMJMTuVSruS6Ee7iTu42G3WuL4jSkCQNSdKQJA1J0pAkDUnSkCQNSfIw
        Yilnct4Id1mmXYcnEXO5kXdp8TdCd3I3d5yPFkBjLa9S/0HL3HVduseJ+J8G00mtc2d3j30JiNw9HquA
        xt2RP4f13P1/AfAvAfybIPtjEH8j5IeyCNxb4SkN3pchqjQkSUOSNCRJQ5I0JElDkjQkSUOS8QV5g4QG
        d4uMBneTlAZ7m5wGfqMkfqssfrM0frs8/sAE+8hM+SzkHpoqC8A+NtfTYB6cJEtDkjTk6OIPlnqmklUO
        Ce4AAAAASUVORK5CYII=
</value>
  </data>
  <data name="bNew.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAb0AAAG9Abrvp3kAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAEQ0lEQVR4Xu2bu0tcQRTGtYiNTRpB8J8QwV4C2qUTfJSxkjRprCVtGmvbJIW2EWwCKaJVIKnTxCaQ
        PoGQIiSb77s7dzme/Wbu3b2PFScHfuCemfOYce88784NBoNOgSyCx+AZeAFeg3fgM/gR4N/UsYx1WJc2
        i8pnm0hlUyBL4Al4A34BKqeBtvRBX0sqVlOkchogC+AQXIE/wDakDejzPWCMBZXDNEjlJEDmwT64ATbh
        LmEsxpxXOU2CVNYFsgU+AZtcnzD2lsqtLlJZBWQFvAU2mVnCXFZUrlVIZQrIOvgGbAJ1+A341b0G5+AE
        HAX4N3UsYx3WVT5SMKd1lXMKqYwB2QWTjOrfwRnYAw+VTwXrBhva0of3G4O57SqfMaTSA+FA9xzYYCku
        wSZ4oPxNAn0EX/Tp48RgrrUGSKm00BF4BWyAGB/BI+WnDeg7xPBxFS9BZSdIpQVS5z//FbQyLVXBGCEW
        Y/o8PMfKh0UqSyB85q1DBRcnnazSUjBmiO3zsfwF28q+RCoJhKN91YB3Cho/59PC2CEHn5flJ1hT9kQr
        h/N8aqrjNPVU2c4C5hJy8nmW8HFZlrZSWb3IuTONL2FOJj/FhbQbUwyXt9bQc+pt7grMzeSp2BizufVh
        OMKm1vYcdBo985DV4EuxqmzqAuGYkBoYP4BbM5V3wOnFGlj4HDUe7SGddQCBcHZITZE7t+obQ+7nU1va
        fWs4LZBOO4BAUv/IL2B0nmCNeNBgK1q4+mplkQPpowP4KKdWjIejusboylTwtLa8hXTeAQTCZbP3X3I1
        qhcq87mJHWNdlpXbANJLBxBIbAPFthbjWVnxIBQoNq3TpkD67ADuIn2MkoOiTqh4YQos3Iu3utSF9NkB
        nBZj5wnFwojCc/vYmv/MO20KpLcOIBAeqvg4hG1m24sLCFWB7CmnTYD03QE8WfJxStj24hZGFXJzUfsY
        qy6QvjuAx2uxjRLbXlxFqcIb5bApkF47gEBiCzy2vbiPU4XXypkHwgZNwg7wsUpYpmyiqJw8EJ42+1iE
        bS8uJVXhuXLmcTa94/NRQHjkPmYL2PbiZlYVnihnHmfTOz4fBYT3DmO2gG0vrqdV4ZFy5nE2vePzUUB4
        +TJmC9j2/x2Q/SOQ/SCY/TSY/UIo+6Vw9puhvLfDoVK+ByKhYvZHYnkfiobK+R6LB4PsL0byvhqrYXi/
        L0eLD8OvTr7X44Ui5xckRsqcX5EplLm/JEUg+b4mVwLJ90XJEki+r8oSCAPyxWPrOAZXX/frZWlCR+AY
        8Ctlg8SY5evyzJG51vo2SmUMyDbgoGIDpuBevM8fTDC35DPvkcoUkDVQ5/nzcJriXqOrn8wwp+hoH0Mq
        q4Asg9gp0ixgLnKer0Iq6wLZAFxf22T6hLHHlreTIJWTAOEAyQsNbjNtcl3CWIzZeNqVymmA5PnTWQWE
        q7S8fjwdA3KHfz4/mPsHGd6p5Dd5EtIAAAAASUVORK5CYII=
</value>
  </data>
</root>